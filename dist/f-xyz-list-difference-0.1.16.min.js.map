{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","f-xyz-list-difference-0.1.16.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","fXyzListDifference","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"getUniqueId","lastUniqueId","maybe","x","y","undefined","buildHashToIndexMap","list","primaryKey","map","item","diff","newList","oldList","addEntry","state","newIndex","prevIndex","push","oldIndex","newIndexMap","oldIndexMap","newItem","oldItem","DIFF_DELETED","DIFF_CREATED","indexOfNewItemInOldList","indexOfOldItemInNewList","isCreated","isDeleted","DIFF_MOVED","DIFF_NOT_MODIFIED","NOT_MODIFIED","CREATED","MOVED","DELETED"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,mBAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAA,YAaA,SAAA0B,KACA,MAAAC,KASA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,UAAAF,EAAAA,EACAC,EAQA,QAAAE,GAAAC,EAAAC,GAEA,IAAA,GADAC,MACAhB,EAAA,EAAAA,EAAAc,EAAAT,SAAAL,EAAA,CACA,GAAAiB,GAAAH,EAAAd,EACAgB,GAAAC,EAAAF,IAAAf,EAEA,MAAAgB,GAWA,QAAAE,GAAAC,EAAAC,EAAAL,GAQA,QAAAM,GAAAJ,EAAAK,EAAAC,EAAAC,GACAN,EAAAO,MACAR,KAAAA,EACAK,MAAAA,EACAI,SAAAF,EACAD,SAAAA,IAIA,IAhBA,GAAAL,MACAK,EAAA,EACAG,EAAA,EAEAC,EAAAd,EAAAM,EAAAJ,GACAa,EAAAf,EAAAO,EAAAL,GAWAQ,EAAAJ,EAAAd,QAAAqB,EAAAN,EAAAf,QAAA,CACA,GAAAwB,GAAAV,EAAAI,GACAO,EAAAV,EAAAM,EAEA,IAAAH,GAAAJ,EAAAd,OAEAgB,EAAAS,EAAAC,EAAA,GAAAL,KACAA,MAEA,IAAAA,GAAAN,EAAAf,OAEAgB,EAAAQ,EAAAG,EAAAT,EAAA,MACAA,MAEA,IAAAM,IAAAC,EAAA,CAEA,GAAAG,GACAxB,EAAAmB,EAAAC,EAAAd,IAAA,IAEAmB,EACAzB,EAAAkB,EAAAG,EAAAf,IAAA,IAEAoB,EAAA,KAAAF,EACAG,EAAA,KAAAF,CAGAC,KACAd,EAAAQ,EAAAG,EAAAT,EAAA,MACAA,GAIAY,GAAAC,IACAf,EAAAQ,EAAAQ,EAAAd,EAAAW,KACAX,IACAG,GAIAU,IACAf,EAAAS,EAAAC,EAAA,GAAAL,KACAA,OAIAL,GAAAS,EAAAQ,EAAAf,EAAAG,KACAH,IACAG,EAIA,MAAAR,GApHA,GAAAoB,GAAA,EACAN,EAAA,EACAK,EAAA,EACAN,EAAA,GAEAvB,EAAA,CAoHAU,GAAAqB,aAAAD,EACApB,EAAAsB,QAAAR,EACAd,EAAAuB,MAAAJ,EACAnB,EAAAwB,QAAAX,EACAb,EAAAX,YAAAA,EACAW,EAAAL,oBAAAA,EAEA/B,EAAAD,QAAAqC,YCGW,IAAI","file":"f-xyz-list-difference-0.1.16.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar DIFF_NOT_MODIFIED = 0;\nvar DIFF_CREATED = 1;\nvar DIFF_MOVED = 2;\nvar DIFF_DELETED = -1;\n\nvar lastUniqueId = 0;\n\n/**\n * Returns auto incremental unique ID as integer.\n * @returns {number} integers starting from 0\n */\nfunction getUniqueId() {\n    return lastUniqueId++;\n}\n\n/**\n * Returns x if it is not undefined, y otherwise.\n * @param x\n * @param y\n * @returns {*}\n */\nfunction maybe(x, y) {\n    if (x !== undefined) return x;\n    return y;\n}\n\n/**\n * @param {Array} list\n * @param {string} primaryKey\n * @returns {{}}\n */\nfunction buildHashToIndexMap(list, primaryKey) {\n    var map = {};\n    for (var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        map[item[primaryKey]] = i;\n    }\n    return map;\n}\n\n/**\n * Calculates difference between two arrays.\n * Returns array of { item: T, state: int }.\n * Where state means: 0 - not modified, 1 - created, -1 - deleted.\n * @param {Array} newList\n * @param {Array} oldList\n * @param {string} primaryKey item's unique index field name\n */\nfunction diff(newList, oldList, primaryKey) {\n    var diff = [];\n    var newIndex = 0;\n    var oldIndex = 0;\n\n    var newIndexMap = buildHashToIndexMap(newList, primaryKey);\n    var oldIndexMap = buildHashToIndexMap(oldList, primaryKey);\n\n    function addEntry(item, state, newIndex, prevIndex) {\n        diff.push({\n            item: item,\n            state: state,\n            oldIndex: prevIndex,\n            newIndex: newIndex\n        });\n    }\n\n    for (; newIndex < newList.length || oldIndex < oldList.length;) {\n        var newItem = newList[newIndex];\n        var oldItem = oldList[oldIndex];\n\n        if (newIndex >= newList.length) {\n\n            addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n            ++oldIndex;\n\n        } else if (oldIndex >= oldList.length) {\n\n            addEntry(newItem, DIFF_CREATED, newIndex, -1);\n            ++newIndex;\n\n        } else if (newItem !== oldItem) {\n\n            var indexOfNewItemInOldList =\n                maybe(oldIndexMap[newItem[primaryKey]], -1);\n\n            var indexOfOldItemInNewList =\n                maybe(newIndexMap[oldItem[primaryKey]], -1);\n\n            var isCreated = indexOfNewItemInOldList === -1;\n            var isDeleted = indexOfOldItemInNewList === -1;\n\n            // created\n            if (isCreated) {\n                addEntry(newItem, DIFF_CREATED, newIndex, -1);\n                ++newIndex;\n            }\n\n            // moved\n            if (!isCreated && !isDeleted) {\n                addEntry(newItem, DIFF_MOVED, newIndex, indexOfOldItemInNewList);\n                ++newIndex;\n                ++oldIndex;\n            }\n\n            // deleted\n            if (isDeleted) {\n                addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n                ++oldIndex;\n            }\n\n        } else {\n            addEntry(oldItem, DIFF_NOT_MODIFIED, newIndex, oldIndex);\n            ++newIndex;\n            ++oldIndex;\n        }\n    }\n\n    return diff;\n}\n\n// exports ////////////////////////////////////////////////////////////////\n\ndiff.NOT_MODIFIED = DIFF_NOT_MODIFIED;\ndiff.CREATED = DIFF_CREATED;\ndiff.MOVED = DIFF_MOVED;\ndiff.DELETED = DIFF_DELETED;\ndiff.getUniqueId = getUniqueId;\ndiff.buildHashToIndexMap = buildHashToIndexMap;\n\nmodule.exports = diff;\n",null],"sourceRoot":"/source/"}